<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
  <Token>
    <TokenIdentifier>
      <Name>DBCPP_INV</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dbcpp_8h.html</Path>
    <Anchor>a71c76766747fc2ec43b1898cf4c906d2</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DBCPP_POSTCOND</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dbcpp_8h.html</Path>
    <Anchor>a4558fe30bf37069ba73b8c171685cd6b</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DBCPP_PRECOND</Name>
      <APILanguage>unknown</APILanguage>
      <Type>macro</Type>
    </TokenIdentifier>
    <Path>dbcpp_8h.html</Path>
    <Anchor>acc4c3ee30e3b22f1a4ff17c7b7d6ae9f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkInvariantIfAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>DesignByContractPlusPlus</Scope>
    </TokenIdentifier>
    <Path>namespace_design_by_contract_plus_plus.html</Path>
    <Anchor>a5cb5ab7e375f9d16c1b0c77761dd64bd</Anchor>
    <Abstract>Calls the invariant method of class `T` if it is available.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFailFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>DesignByContractPlusPlus</Scope>
    </TokenIdentifier>
    <Path>namespace_design_by_contract_plus_plus.html</Path>
    <Anchor>a5baef3531d8b1f806af8ea06233f4b70</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTraceFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>DesignByContractPlusPlus</Scope>
    </TokenIdentifier>
    <Path>namespace_design_by_contract_plus_plus.html</Path>
    <Anchor>adc50179b2ad9f1e176111130628a523f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>todo</Name>
      <APILanguage>unknown</APILanguage>
    </TokenIdentifier>
    <Path>todo.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DesignByContractPlusPlus</Name>
      <APILanguage>c</APILanguage>
      <Type>ns</Type>
      <Scope>DesignByContractPlusPlus</Scope>
    </TokenIdentifier>
    <Path>namespace_design_by_contract_plus_plus.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>checkInvariantIfAvailable</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>DesignByContractPlusPlus</Scope>
    </TokenIdentifier>
    <Path>namespace_design_by_contract_plus_plus.html</Path>
    <Anchor>a5cb5ab7e375f9d16c1b0c77761dd64bd</Anchor>
    <Abstract>Calls the invariant method of class `T` if it is available.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFailFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>DesignByContractPlusPlus</Scope>
    </TokenIdentifier>
    <Path>namespace_design_by_contract_plus_plus.html</Path>
    <Anchor>a5baef3531d8b1f806af8ea06233f4b70</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTraceFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>DesignByContractPlusPlus</Scope>
    </TokenIdentifier>
    <Path>namespace_design_by_contract_plus_plus.html</Path>
    <Anchor>adc50179b2ad9f1e176111130628a523f</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DesignByContractPlusPlus::HAS_INVARIANT</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>DesignByContractPlusPlus::HAS_INVARIANT</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_h_a_s___i_n_v_a_r_i_a_n_t.html</Path>
    <DeclaredIn>dbcpp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>VALUE</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DesignByContractPlusPlus::HAS_INVARIANT</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_h_a_s___i_n_v_a_r_i_a_n_t.html</Path>
    <Anchor>ac4b29df8e751ff440fb296366f6ffa03</Anchor>
    <Abstract>Sets the value dependend of the provided class `T`.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>one</Name>
      <APILanguage>cpp</APILanguage>
      <Type>tdef</Type>
      <Scope>DesignByContractPlusPlus::HAS_INVARIANT</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_h_a_s___i_n_v_a_r_i_a_n_t.html</Path>
    <Anchor>af0936fab68fa886d2f4a4d47cb22c14c</Anchor>
    <Abstract>indicates that the class T has an invariant method</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>DesignByContractPlusPlus::HAS_INVARIANT</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_h_a_s___i_n_v_a_r_i_a_n_t.html</Path>
    <Anchor>a86a8184f6991e8cbb798690492f8591c</Anchor>
    <Abstract>Overload of the test function that holds for classes *with* invariant method.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>DesignByContractPlusPlus::HAS_INVARIANT</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_h_a_s___i_n_v_a_r_i_a_n_t.html</Path>
    <Anchor>a7453c143d5df2a44d93231acf994da7d</Anchor>
    <Abstract>Overload of the test function that holds for classes *without* invariant method.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DesignByContractPlusPlus::HAS_INVARIANT::two</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DesignByContractPlusPlus::HAS_INVARIANT::two</Scope>
    </TokenIdentifier>
    <Path>struct_design_by_contract_plus_plus_1_1_h_a_s___i_n_v_a_r_i_a_n_t_1_1two.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>a</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DesignByContractPlusPlus::HAS_INVARIANT::two</Scope>
    </TokenIdentifier>
    <Path>struct_design_by_contract_plus_plus_1_1_h_a_s___i_n_v_a_r_i_a_n_t_1_1two.html</Path>
    <Anchor>a2ef818cace738412e237b4661feaf0de</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DesignByContractPlusPlus::IF&lt; false, T &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>DesignByContractPlusPlus::IF&lt; false, T &gt;</Scope>
    </TokenIdentifier>
    <Path>struct_design_by_contract_plus_plus_1_1_i_f_3_01false_00_01_t_01_4.html</Path>
    <Abstract>Comile time IF: *false* case.</Abstract>
    <DeclaredIn>dbcpp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>DesignByContractPlusPlus::IF&lt; false, T &gt;</Scope>
    </TokenIdentifier>
    <Path>struct_design_by_contract_plus_plus_1_1_i_f_3_01false_00_01_t_01_4.html</Path>
    <Anchor>af9d518ef85cbbe546ae21725f8dbb6e1</Anchor>
    <Abstract>Handle classes without invariant method as.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DesignByContractPlusPlus::IF&lt; true, T &gt;</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>DesignByContractPlusPlus::IF&lt; true, T &gt;</Scope>
    </TokenIdentifier>
    <Path>struct_design_by_contract_plus_plus_1_1_i_f_3_01true_00_01_t_01_4.html</Path>
    <Abstract>Comile time IF: *true* case.</Abstract>
    <DeclaredIn>dbcpp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>test</Name>
      <APILanguage>cpp</APILanguage>
      <Type>func</Type>
      <Scope>DesignByContractPlusPlus::IF&lt; true, T &gt;</Scope>
    </TokenIdentifier>
    <Path>struct_design_by_contract_plus_plus_1_1_i_f_3_01true_00_01_t_01_4.html</Path>
    <Anchor>a55be191b4cdaf17f354739be70ece5bd</Anchor>
    <Abstract>Call the invariant method of the given class.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DesignByContractPlusPlus::InvariantChecker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <DeclaredIn>dbcpp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>InvariantChecker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>af74dec542f05fbc5a10813aa06ce8f01</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~InvariantChecker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>ac7dbdb3757e7fb04e606070e54f35f30</Anchor>
    <Abstract>The destructor executes the provided checks.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>failPositionText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>ad54f2a418aa6dbda0a91d33b47df74b7</Anchor>
    <Abstract>Create text for identifying position in source file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertContract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>a28e68029959eca16955a273b4ebed859</Anchor>
    <Abstract>The general function that checks if a condition holds.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invariantFailText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>a1e35e3423c97ccedff382dc04bb97d63</Anchor>
    <Abstract>Create fail text for invariant.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>invariantTraceText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>a2f7972e9625873f169c474417993cba3</Anchor>
    <Abstract>Create fail text for invariant.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_file</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>ac44dc2e616aa4e31afe9f4cfdc479734</Anchor>
    <Abstract>The file where the check is declared.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_invF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>a2b1f88b9b30b0b592e2baf80e3e9cf39</Anchor>
    <Abstract>The invariant to be checked.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_line</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>a53e85617021dcfe671cbc7c6013072c6</Anchor>
    <Abstract>The line of the file where the check is declared.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>s_staticFunctionHelper</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>a76b75e68b6b943ca319577be479cf0ab</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setFailFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>aef2a2cde0070fe9850120541065c7e87</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>setTraceFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>ffunc</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>ae5cf1e690b352d1947932e0a61ddd528</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DesignByContractPlusPlus::InvariantChecker::staticFunctionHelper</Name>
      <APILanguage>c</APILanguage>
      <Type>tmplt</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker::staticFunctionHelper</Scope>
    </TokenIdentifier>
    <Path>struct_design_by_contract_plus_plus_1_1_invariant_checker_1_1static_function_helper.html</Path>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>s_failFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker::staticFunctionHelper</Scope>
    </TokenIdentifier>
    <Path>struct_design_by_contract_plus_plus_1_1_invariant_checker_1_1static_function_helper.html</Path>
    <Anchor>ac57b1ea75c225a48f892468219935974</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>s_traceFunction</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker::staticFunctionHelper</Scope>
    </TokenIdentifier>
    <Path>struct_design_by_contract_plus_plus_1_1_invariant_checker_1_1static_function_helper.html</Path>
    <Anchor>a9fbe3a6d5efb51b51eefaf86953ce74d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DesignByContractPlusPlus::PostConditionChecker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DesignByContractPlusPlus::PostConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_post_condition_checker.html</Path>
    <DeclaredIn>dbcpp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PostConditionChecker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::PostConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_post_condition_checker.html</Path>
    <Anchor>a7b52020867956ed26abc3ed456a5f7d9</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>~PostConditionChecker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::PostConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_post_condition_checker.html</Path>
    <Anchor>a1608fbf7c20787cfb315d3a28f45a1c4</Anchor>
    <Abstract>The destructor executes the provided checks.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>failPositionText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>ad54f2a418aa6dbda0a91d33b47df74b7</Anchor>
    <Abstract>Create text for identifying position in source file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertContract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>a28e68029959eca16955a273b4ebed859</Anchor>
    <Abstract>The general function that checks if a condition holds.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postconditionFailText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::PostConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_post_condition_checker.html</Path>
    <Anchor>a5e67dddadd9312310c5b21235d1443da</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>postconditionTraceText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::PostConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_post_condition_checker.html</Path>
    <Anchor>a401e7bc9cd87831689c67be2484789b7</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_condExpr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DesignByContractPlusPlus::PostConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_post_condition_checker.html</Path>
    <Anchor>a7bc05c5faf71c6337e5fedef4a9d7f7f</Anchor>
    <Abstract>The postcondition as a string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_postF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DesignByContractPlusPlus::PostConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_post_condition_checker.html</Path>
    <Anchor>a49bf877027ff85067b760a88f71e0825</Anchor>
    <Abstract>The postcondition to check.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>DesignByContractPlusPlus::PreConditionChecker</Name>
      <APILanguage>c</APILanguage>
      <Type>cl</Type>
      <Scope>DesignByContractPlusPlus::PreConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_pre_condition_checker.html</Path>
    <DeclaredIn>dbcpp.h</DeclaredIn>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>PreConditionChecker</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::PreConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_pre_condition_checker.html</Path>
    <Anchor>a8cb0e2380ac272221a771ded0b951551</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>failPositionText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>ad54f2a418aa6dbda0a91d33b47df74b7</Anchor>
    <Abstract>Create text for identifying position in source file.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>assertContract</Name>
      <APILanguage>cpp</APILanguage>
      <Type>clm</Type>
      <Scope>DesignByContractPlusPlus::InvariantChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_invariant_checker.html</Path>
    <Anchor>a28e68029959eca16955a273b4ebed859</Anchor>
    <Abstract>The general function that checks if a condition holds.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preconditionFailText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::PreConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_pre_condition_checker.html</Path>
    <Anchor>ae96e543b4934d6ce1a39cc14fdbf0778</Anchor>
    <Abstract>Create fail text for precondition.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>preconditionTraceText</Name>
      <APILanguage>cpp</APILanguage>
      <Type>instm</Type>
      <Scope>DesignByContractPlusPlus::PreConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_pre_condition_checker.html</Path>
    <Anchor>abbc549fa8a368d7ea01722af2134018d</Anchor>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_condExpr</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DesignByContractPlusPlus::PreConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_pre_condition_checker.html</Path>
    <Anchor>a7d4e78b45f378b0283ef4b22b9ffebd9</Anchor>
    <Abstract>The postcondition as a string.</Abstract>
  </Token>
  <Token>
    <TokenIdentifier>
      <Name>m_preF</Name>
      <APILanguage>cpp</APILanguage>
      <Type>data</Type>
      <Scope>DesignByContractPlusPlus::PreConditionChecker</Scope>
    </TokenIdentifier>
    <Path>class_design_by_contract_plus_plus_1_1_pre_condition_checker.html</Path>
    <Anchor>a3bcafa2afa18ffb4cbb9024bb58ec1cc</Anchor>
    <Abstract>The postcondition to check.</Abstract>
  </Token>
</Tokens>
